;;;
;;; ToDo:
;;; * not inlining on function application, instead define functions using defun and call them with expanding tuple arguments
;;; * make functions to be able to take external variables
;;; * int type is not needed anymore
;;; * bool type is not needed except in test-form of if-expressions
;;; * lacks some built-in functions to export?
;;; * problem with eval-when's situations that slime-compile-defun on tests for define-functions fails though slime-compile-and-load-file on them succeeds
;;; * add no recursion check in define-function because mini-lang does not permit recursion
;;; * add an interface to define parameters which can be used in mini-lang expressions to avoid verbose external environment references
;;; * add vec3 operations (vec3-x, vec3-+ and so on)
;;; * add quote functionality that enables using external common lisp expressions
;;;
;;; Done:
;;; * let expressions really need types for each bound?
;;; * add descriptions to the tests
;;; * add tests on the selectors of user-defined-function
;;; * explicitly implement lexical scoping independent of inferior common lisp's one
;;; * add sph example
;;; * add diffusion simulation example
;;; * add int type and its operations
;;; * if expression and boolean type
;;; * test negate function
;;; * test exp function
;;; * add exp function
;;; * add more tests for binarization
;;; * add n-body example
;;; * add macros to defvar scalar-array and vec3-array variables type declaimed for performance optimization
;;; * add norm function whose type is vec3 -> scalar
;;; * export scalar and vec3 operations defined by cl-tuples
;;; * add operation interfaces including scalar and vec3 operations
;;; * automatic binarization of arithmetic operations, which enables to write forms like (+ a b c) and expands it to (+ (+ a b) c)
;;; * implementation of vec3 arithmetic using cl-tuples
;;; * reference to external environment: variables and array variables
;;; * register to github
;;; * type-of-application
;;; * function application
;;; * packaging as library and separation of tests into another file
;;;


