;;;
;;; ToDo:
;;; * add descriptions to the tests
;;; * use gensym for vec3 in let binding and variable reference, instead of variable names followed by "0", "1" and "2"
;;; * with-int, with-scalar and with-vec3 external environment interfaces
;;; * add quote functionality that enables using external common lisp expressions
;;; * add type specification to output of compile-variable
;;; * add sph example
;;; * array addition example as fast as C
;;; * type declaration for external environment reference in expressions for performance optimization (is this needed?)
;;;
;;; Done:
;;; * add diffusion simulation example
;;; * add int type and its operations
;;; * if expression and boolean type
;;; * test negate function
;;; * test exp function
;;; * add exp function
;;; * add more tests for binarization
;;; * add n-body example
;;; * add macros to defvar scalar-array and vec3-array variables type declaimed for performance optimization
;;; * add norm function whose type is vec3 -> scalar
;;; * export scalar and vec3 operations defined by cl-tuples
;;; * add operation interfaces including scalar and vec3 operations
;;; * automatic binarization of arithmetic operations, which enables to write forms like (+ a b c) and expands it to (+ (+ a b) c)
;;; * implementation of vec3 arithmetic using cl-tuples
;;; * reference to external environment: variables and array variables
;;; * register to github
;;; * type-of-application
;;; * function application
;;; * packaging as library and separation of tests into another file
;;;


